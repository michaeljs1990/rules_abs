load("@bazel_skylib//lib:selects.bzl", "selects")

alias(
    name = "hello",
    actual = select({
        ":darwin_amd64": "@container_files//:public/darwin/amd64/hello",
        ":darwin_arm64": "@container_files//:public/darwin/arm64/hello",
        ":linux_amd64": "@container_files//:public/linux/amd64/hello",
        ":linux_arm64": "@container_files//:public/linux/arm64/hello",
    }),
)

selects.config_setting_group(
    name = "linux_amd64",
    match_all = [
        "@platforms//os:linux",
        "@platforms//cpu:x86_64",
    ],
)

selects.config_setting_group(
    name = "linux_arm64",
    match_all = [
        "@platforms//os:linux",
        "@platforms//cpu:arm64",
    ],
)

selects.config_setting_group(
    name = "darwin_amd64",
    match_all = [
        "@platforms//os:macos",
        "@platforms//cpu:x86_64",
    ],
)

selects.config_setting_group(
    name = "darwin_arm64",
    match_all = [
        "@platforms//os:macos",
        "@platforms//cpu:arm64",
    ],
)

# sanity check to ensure kubectl is marked executable
genrule(
    name = "output",
    outs = ["output.txt"],
    cmd = "$(location :hello) > \"$@\"",
    tools = [":hello"],
)

sh_test(
    name = "check_version",
    srcs = ["//:check_file_hash.sh"],
    args = [
        "$(location :output)",
        "e9527bd02d2c843ee056eb77dafd160970cea3e121da02b172cc5b7d8b0a2b7f",
    ],
    data = [":output"],
)
